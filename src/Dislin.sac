module SimpleDislin;

provide all except { printSurfaceInternal} ;

use String: {string};
use Structures: all except {string};


external void disini();
#pragma linkwith "dislnc"
#pragma linkwith "m"
#pragma linkwith "X11"
#pragma linkwith "Xt"
#pragma linkwith "Xm"

external void setpag( string paper);
external void metafl( string paper);
external void disfin();
external void erase();
external void endgrf();
external void box3d();

external void messag( string cstr, int nx, int ny);

external void symfil( string cdev, string cstat);

external void pagera();

external void complx();

/***
 **
 ** Parameter Settings - Axis systems
 **/

external void axspos( int nxa, int nya);
/**
 * nxa, nya - defining the lower left corner of the axis system
 */

external void axslen( int nxl, int nyl);
/**
 * nxl, nyl - length and height in plot coordinates
 */






/***
 **
 ** Defining view properties:
 **/

external void view3d( float xvu, float yvu, float zvu, string cvu);
/**
 * xvu, yvu, zvu position of the view point
 * cvu = "ABS" | "USER" | "ANGLE"
 */







/***
 **
 ** Plotting axis systems:
 **/

external void graf3d( float xa, float xe, float xor, float xstep,
                      float ya, float ye, float yor, float ystep,
                      float za, float ze, float zor, float zstep );
/**
 * a - lower limit
 * e - upper limit
 * or - first label
 * step - label separation
 */

external void height( int val);

external void color( string col);

external void surmat( float[.,.] zmat, int ixdim, int iydim, int ixp, int iyp);






/******************************************************************************/


int createDisplay( string title)
{
  metafl( "xwin");
  setpag( "da4p");
  disini();
  pagera();
  complx();
  height( 50);

  return(0+0);
}

int createAxes3D( int dis, float[3] mins, float[3]maxs, float[3]steps )
{
  axspos( 200,2600);
  axslen( 1800,1800);

  view3d( -5f, -5f, 4f, "abs");
  
  graf3d( mins[[0]], maxs[[0]], mins[[0]], steps[[0]], 
          mins[[1]], maxs[[1]], mins[[1]], steps[[1]],
          mins[[2]], maxs[[2]], mins[[2]], steps[[2]]);

  return( 0+0);
}


  

int printSurface( int as, string col, float[.,.] mat)
{
  if( as != 0) {
    mat = mat ++ mat;
  }
    
  as = printSurfaceInternal( as, col, mat);
  return( as);
}

int printSurfaceInternal( int as, string col, float[.,.] mat)
{
  color( col);
  surmat( mat, shape( mat)[0], shape( mat)[1], 1, 1);
  return( as);
}

int destroyAxes3D( int as)
{
  endgrf();
  return( 0+0);
}

int clearDisplay( int disp)
{
  erase();
  return( disp);
}

int destroyDisplay( int dis)
{
  disfin();
  return( 0+0);
}

