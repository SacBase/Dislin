class DislinSystem;

classtype bool[9];

provide all except { getStatus, setStatus};

use String: {string};
use Array: {genarray};

objdef DislinSystem TheDislinSystem = to_DislinSystem( genarray([9], false));

bool[9] getGlobalStatus()
{
  return( getStatus( TheDislinSystem));
}

bool[9] getStatus( DislinSystem & system)
{
  status = from_DislinSystem( system);
  system = to_DislinSystem( status);
  return( status);
}

void setStatus( DislinSystem & system, bool[9] status)
{
  system = to_DislinSystem( status);
}

void setGlobalStatus( bool[9] status)
{
  setStatus( TheDislinSystem, status);
}

external void disini();
  #pragma linkwith "dislnc"
  #pragma linkwith "m"
  #pragma linkwith "X11"
  #pragma linkwith "Xt"
  #pragma linkwith "Xm"
  #pragma effect DislinSystem::TheDislinSystem

external void setpag( string paper);
  #pragma effect DislinSystem::TheDislinSystem
external void page( int wid, int height);
  #pragma effect DislinSystem::TheDislinSystem
external void metafl( string paper);
  #pragma effect DislinSystem::TheDislinSystem
external void disfin();
  #pragma effect DislinSystem::TheDislinSystem
external void erase();
  #pragma effect DislinSystem::TheDislinSystem
external void endgrf();
  #pragma effect DislinSystem::TheDislinSystem
external void box3d();
  #pragma effect DislinSystem::TheDislinSystem

external void opnwin( int id);
  #pragma effect DislinSystem::TheDislinSystem
external void selwin( int id);
  #pragma effect DislinSystem::TheDislinSystem
external void clswin( int id);
  #pragma effect DislinSystem::TheDislinSystem

external void messag( string cstr, int nx, int ny);
  #pragma effect DislinSystem::TheDislinSystem

external void symfil( string cdev, string cstat);
  #pragma effect DislinSystem::TheDislinSystem

external void pagera();
  #pragma effect DislinSystem::TheDislinSystem

external void complx();
  #pragma effect DislinSystem::TheDislinSystem

/***
 **
 ** Parameter Settings - Axis systems
 **/

external void axspos( int nxa, int nya);
  #pragma effect DislinSystem::TheDislinSystem
/**
 * nxa, nya - defining the lower left corner of the axis system
 */

external void axslen( int nxl, int nyl);
  #pragma effect DislinSystem::TheDislinSystem
/**
 * nxl, nyl - length and height in plot coordinates
 */






/***
 **
 ** Defining view properties:
 **/

external void view3d( float xvu, float yvu, float zvu, string cvu);
  #pragma effect DislinSystem::TheDislinSystem
/**
 * xvu, yvu, zvu position of the view point
 * cvu = "ABS" | "USER" | "ANGLE"
 */







/***
 **
 ** Plotting axis systems:
 **/

external void graf3d( float xa, float xe, float xor, float xstep,
                      float ya, float ye, float yor, float ystep,
                      float za, float ze, float zor, float zstep );
  #pragma effect DislinSystem::TheDislinSystem
/**
 * a - lower limit
 * e - upper limit
 * or - first label
 * step - label separation
 */

external void height( int val);
  #pragma effect DislinSystem::TheDislinSystem

external void color( string col);
  #pragma effect DislinSystem::TheDislinSystem

external void surmat( float[.,.] zmat, int ixdim, int iydim, int ixp, int iyp);
  #pragma effect DislinSystem::TheDislinSystem



/***
 **
 ** Quick-Plots:
 **/


external void qplbar( float[.] xvect, int n);
  #pragma effect DislinSystem::TheDislinSystem


